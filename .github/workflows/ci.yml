# GitHub CI Workflow

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        language: [go, node, python]
    runs-on: ${{ matrix.os }}
    # Only Ubuntu runners typically have Docker available by default
    # Add Docker label only if Docker is actually needed
    # runs-on: ${{ matrix.os == 'ubuntu-latest' && matrix.language == 'go' && needs_docker == 'true' && format('{0}-docker', matrix.os) || matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Set up Node.js
      if: matrix.language == 'node'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'sdks/node/package-lock.json'

    - name: Set up Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install Go dependencies
      if: matrix.language == 'go'
      run: |
        cd cli/usm && go mod tidy
        cd ../.. && cd core/crypto && go mod tidy
        cd ../.. && cd sdks/go && go mod tidy

    - name: Install Node.js dependencies
      if: matrix.language == 'node'
      run: |
        cd sdks/node && npm ci

    - name: Build Node.js SDK
      if: matrix.language == 'node'
      run: |
        cd sdks/node && npm run build

    - name: Install Python dependencies
      if: matrix.language == 'python'
      run: |
        cd sdks/python
        pip install pytest
        pip install -e .
      env:
        SETUPTOOLS_SCM_PRETEND_VERSION: "0.1.0"

    - name: Run Go tests
      if: matrix.language == 'go'
      run: |
        make test-cli

    - name: Run Node.js tests
      if: matrix.language == 'node'
      run: |
        cd sdks/node && npm test

    - name: Run Python tests
      if: matrix.language == 'python'
      run: |
        cd sdks/python && pytest