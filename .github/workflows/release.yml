name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_name: usm-linux-amd64
            binary_name: usm-linux-amd64
          - os: macos-latest
            asset_name: usm-darwin-amd64
            binary_name: usm-darwin-amd64
          - os: windows-latest
            asset_name: usm-windows-amd64.exe
            binary_name: usm-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Prepare release environment
      run: |
        # Create a temporary directory for the release build
        mkdir -p /tmp/usm-release
        cd /tmp/usm-release
        
        # Copy the CLI directory
        cp -r ${{ github.workspace }}/cli/usm cli
        
        # Copy the core/crypto directory
        cp -r ${{ github.workspace }}/core/crypto core
        
        # Remove the existing go.mod file
        rm -f cli/usm/go.mod
        
        # Create a new go.mod file for the CLI that uses a local path instead of replace directive
        echo "module github.com/universal-secrets-manager/usm/cli/usm" > cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "go 1.22" >> cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "toolchain go1.24.5" >> cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "require (" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/config v1.31.1" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/secretsmanager v1.38.1" >> cli/usm/go.mod
        echo "    github.com/spf13/cobra v1.7.0" >> cli/usm/go.mod
        echo "    gopkg.in/yaml.v3 v3.0.1" >> cli/usm/go.mod
        echo ")" >> cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "require (" >> cli/usm/go.mod
        echo "    github.com/universal-secrets-manager/usm/core/crypto v0.0.0" >> cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2 v1.38.0 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/credentials v1.18.5 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.18.3 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/internal/configsources v1.4.3 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.7.3 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/internal/ini v1.8.3 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.13.0 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.13.3 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/sso v1.28.1 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/ssooidc v1.33.1 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/aws-sdk-go-v2/service/sts v1.37.1 // indirect" >> cli/usm/go.mod
        echo "    github.com/aws/smithy-go v1.22.5 // indirect" >> cli/usm/go.mod
        echo "    github.com/inconshreveable/mousetrap v1.1.0 // indirect" >> cli/usm/go.mod
        echo "    github.com/spf13/pflag v1.0.5 // indirect" >> cli/usm/go.mod
        echo "    golang.org/x/crypto v0.12.0 // indirect" >> cli/usm/go.mod
        echo ")" >> cli/usm/go.mod
        echo "" >> cli/usm/go.mod
        echo "replace github.com/universal-secrets-manager/usm/core/crypto => ../../core" >> cli/usm/go.mod
        
        # Run go mod tidy
        cd cli/usm
        go mod tidy

    - name: Build binary
      run: |
        cd /tmp/usm-release/cli/usm
        go build -o ${{ matrix.binary_name }} .
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: /tmp/usm-release/cli/usm/${{ matrix.binary_name }}

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          dist/usm-linux-amd64/usm-linux-amd64
          dist/usm-darwin-amd64/usm-darwin-amd64
          dist/usm-windows-amd64.exe/usm-windows-amd64.exe